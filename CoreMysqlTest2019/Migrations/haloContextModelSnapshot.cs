// <auto-generated />
using System;
using AdminPortal.HaloMysql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminPortal.Migrations
{
    [DbContext(typeof(haloContext))]
    partial class haloContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("AdminPortal.HaloMysql.Applicationdistributions", b =>
                {
                    b.Property<int>("DistroId")
                        .HasColumnName("DistroID")
                        .HasColumnType("int(11)");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int(11)");

                    b.Property<string>("DistroJson")
                        .IsUnicode(false);

                    b.Property<string>("DistroNamespace")
                        .HasMaxLength(63)
                        .IsUnicode(false);

                    b.Property<string>("DistroTitle")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("DistroId");

                    b.ToTable("applicationdistributions","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Authtokens", b =>
                {
                    b.Property<int>("AtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("at_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("AtClientId")
                        .HasColumnName("at_client_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("AtJwt")
                        .HasColumnName("at_jwt")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("AtPassword")
                        .HasColumnName("at_password")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("AtUserName")
                        .HasColumnName("at_user_name")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("AtId");

                    b.ToTable("authtokens","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentreaudittrail", b =>
                {
                    b.Property<long>("CallCentreAuditTrailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreAuditTrailID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTimeOffset?>("CallCentreAuditTrailDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CallCentreAuditTrailTransaction")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<long?>("CallCentreAuditTrailUserId")
                        .HasColumnName("CallCentreAuditTrailUserID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("CallCentreAuditTrailId");

                    b.ToTable("callcentreaudittrail","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentrechatmessages", b =>
                {
                    b.Property<long>("CallCentreChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreChatMessageID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CallCentreChatMessage")
                        .HasColumnType("mediumtext");

                    b.Property<byte?>("CallCentreChatMessageRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("CallCentreChatMessageSentAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("CallCentreChatMessageSentFrom")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("CallCentreChatMessageSentTo")
                        .HasColumnType("bigint(20)");

                    b.HasKey("CallCentreChatMessageId");

                    b.ToTable("callcentrechatmessages","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentrefaqs", b =>
                {
                    b.Property<long>("CallCentreFaqid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreFAQID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CallCentreFaqanswer")
                        .HasColumnName("CallCentreFAQAnswer")
                        .IsUnicode(false);

                    b.Property<string>("CallCentreFaqquestion")
                        .HasColumnName("CallCentreFAQQuestion")
                        .IsUnicode(false);

                    b.HasKey("CallCentreFaqid");

                    b.ToTable("callcentrefaqs","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentrefirestations", b =>
                {
                    b.Property<long>("CallCentreFireStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreFireStationID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CallCentreFireStationAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreFireStationLat")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreFireStationLng")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreFireStationName")
                        .HasMaxLength(55)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreFireStationPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("CallCentreFireStationId");

                    b.ToTable("callcentrefirestations","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentremodules", b =>
                {
                    b.Property<short>("CallCentreModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreModuleID")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("CallCentreModuleHtml")
                        .HasColumnName("CallCentreModuleHTML")
                        .HasColumnType("longtext");

                    b.Property<string>("CallCentreModuleName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("CallCentreModuleOrder")
                        .HasColumnType("int(11)");

                    b.Property<string>("CallCentreModuleScript")
                        .HasColumnType("longtext");

                    b.Property<string>("CallCentreModuleSubNames")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("CallCentreModuleId");

                    b.ToTable("callcentremodules","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentrerolemodules", b =>
                {
                    b.Property<int>("CallCentreRoleModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreRoleModuleID")
                        .HasColumnType("int(11)");

                    b.Property<short?>("CallCentreModuleId")
                        .HasColumnName("CallCentreModuleID")
                        .HasColumnType("smallint(6)");

                    b.Property<short?>("CallCentreRoleId")
                        .HasColumnName("CallCentreRoleID")
                        .HasColumnType("smallint(6)");

                    b.HasKey("CallCentreRoleModuleId");

                    b.ToTable("callcentrerolemodules","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentreuserroles", b =>
                {
                    b.Property<short>("CallCentreUserRoleId")
                        .HasColumnName("CallCentreUserRoleID")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("CallCentreUserRoleName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CallCentreUserRoleId");

                    b.ToTable("callcentreuserroles","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Callcentreusers", b =>
                {
                    b.Property<long>("CallCentreUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CallCentreUserID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CallCentreUserFirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreUserHash")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<short?>("CallCentreUserIsHashed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("CallCentreUserName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CallCentreUserPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<short?>("CallCentreUserRole")
                        .HasColumnType("smallint(6)");

                    b.Property<short>("CallCentreUserStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("CallCentreUserSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CallCentreUserId");

                    b.HasIndex("CallCentreUserName")
                        .IsUnique()
                        .HasName("CallCentreUserName_UNIQUE");

                    b.ToTable("callcentreusers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cartrack", b =>
                {
                    b.Property<long>("CarTrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CarTrackID")
                        .HasColumnType("bigint(10)");

                    b.Property<string>("CarTrackCellphoneNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackClientName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackClientNo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackEngineNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<long?>("CarTrackHaloMemberId")
                        .HasColumnType("bigint(10)");

                    b.Property<string>("CarTrackIdNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackModel")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackPolicyNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackRegistrationNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackVehicleMake")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CarTrackVinNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("CarTrackId");

                    b.ToTable("cartrack","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cities", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("city_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CityDescription")
                        .HasColumnName("city_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CityName")
                        .HasColumnName("city_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("RegionId")
                        .HasColumnName("region_id")
                        .HasColumnType("int(11)");

                    b.HasKey("CityId");

                    b.HasIndex("CityId")
                        .IsUnique()
                        .HasName("city_id_UNIQUE");

                    b.ToTable("cities","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.CitiesList", b =>
                {
                    b.Property<int>("CitiesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cities_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CitiesListDescription")
                        .HasColumnName("cities_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CitiesListName")
                        .HasColumnName("cities_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("CitiesListId");

                    b.HasIndex("CitiesListId")
                        .IsUnique()
                        .HasName("cities_list_id_UNIQUE");

                    b.ToTable("cities_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ClientTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnName("client_id")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<int>("TokensAvailable")
                        .HasColumnName("tokens_available")
                        .HasColumnType("int(11)");

                    b.Property<int?>("TokensBrought")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tokens_brought")
                        .HasColumnType("int(11) unsigned zerofill")
                        .HasDefaultValueSql("00000000000");

                    b.Property<int?>("TokensUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tokens_used")
                        .HasColumnType("int(11) unsigned zerofill")
                        .HasDefaultValueSql("00000000000");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("client_tokens","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cmsmodules", b =>
                {
                    b.Property<short>("CmsmoduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMSModuleID")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("CmsmoduleHtml")
                        .HasColumnName("CMSModuleHTML")
                        .HasColumnType("longtext");

                    b.Property<string>("CmsmoduleName")
                        .HasColumnName("CMSModuleName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("CmsmoduleOrder")
                        .HasColumnName("CMSModuleOrder")
                        .HasColumnType("int(11)");

                    b.Property<string>("CmsmoduleScript")
                        .HasColumnName("CMSModuleScript")
                        .HasColumnType("longtext");

                    b.Property<string>("CmsmoduleSubNames")
                        .HasColumnName("CMSModuleSubNames")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("CmsmoduleId");

                    b.ToTable("cmsmodules","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cmsrolemodules", b =>
                {
                    b.Property<int>("CmsroleModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMSRoleModuleID")
                        .HasColumnType("int(11)");

                    b.Property<short?>("CmsmoduleId")
                        .HasColumnName("CMSModuleID")
                        .HasColumnType("smallint(6)");

                    b.Property<short?>("CmsroleId")
                        .HasColumnName("CMSRoleID")
                        .HasColumnType("smallint(6)");

                    b.HasKey("CmsroleModuleId");

                    b.ToTable("cmsrolemodules","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cmsuserroles", b =>
                {
                    b.Property<short>("CmsuserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMSUserRoleID")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("CmsuserRoleName")
                        .HasColumnName("CMSUserRoleName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CmsuserRoleId");

                    b.ToTable("cmsuserroles","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Cmsusers", b =>
                {
                    b.Property<long>("CmsuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMSUserID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CmsuserName")
                        .HasColumnName("CMSUserName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CmsuserPassword")
                        .HasColumnName("CMSUserPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<short?>("CmsuserRole")
                        .HasColumnName("CMSUserRole")
                        .HasColumnType("smallint(6)");

                    b.Property<short>("CmsuserStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMSUserStatus")
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("CmsuserSurname")
                        .HasColumnName("CMSUserSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CmsuserId");

                    b.HasIndex("CmsuserName")
                        .IsUnique()
                        .HasName("CMSUserName_UNIQUE");

                    b.HasIndex("CmsuserRole")
                        .HasName("fk_CMSUsers_1_idx");

                    b.ToTable("cmsusers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Communicationlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Body")
                        .HasColumnName("body")
                        .HasMaxLength(8192)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sent_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("CommunicationLog_id_uindex");

                    b.ToTable("communicationlog","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Contacts", b =>
                {
                    b.Property<long>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContactID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ContactLastName")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("ContactName")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("ContactStatus")
                        .HasColumnType("int(2)");

                    b.Property<long>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ContactId");

                    b.ToTable("contacts","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("country_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CountryDescription")
                        .HasColumnName("country_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CountryName")
                        .HasColumnName("country_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ServiceSubCatagorieId")
                        .HasColumnName("service_sub_catagorie_id")
                        .HasColumnType("int(11)");

                    b.HasKey("CountryId");

                    b.HasIndex("CountryId")
                        .IsUnique()
                        .HasName("country_id_UNIQUE");

                    b.ToTable("country","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.CountryList", b =>
                {
                    b.Property<int>("CountryListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("country_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CountryListDescription")
                        .HasColumnName("country_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CountryListName")
                        .HasColumnName("country_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("CountryListId");

                    b.HasIndex("CountryListId")
                        .IsUnique()
                        .HasName("country_list_id_UNIQUE");

                    b.ToTable("country_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.EdmundsTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("EdmundsAddress1")
                        .HasColumnName("edmunds_address1")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsAddress2")
                        .HasColumnName("edmunds_address2")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsCity")
                        .HasColumnName("edmunds_city")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsName")
                        .HasColumnName("edmunds_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("EdmundsPayDate")
                        .HasColumnName("edmunds_pay_date");

                    b.Property<string>("EdmundsProvince")
                        .HasColumnName("edmunds_province")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsSalary")
                        .HasColumnName("edmunds_salary")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsSurname")
                        .HasColumnName("edmunds_surname")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EdmundsYearsWorked")
                        .HasColumnName("edmunds_years_worked")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("edmunds_test","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.HaloMobileContentClients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("HaloMobileClientId")
                        .HasColumnName("halo_mobile_client_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("HaloMobileContentId")
                        .HasColumnName("halo_mobile_content_id")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.ToTable("halo_mobile_content_clients","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloaudittrail", b =>
                {
                    b.Property<long>("HaloAuditTrailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloAuditTrailID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTimeOffset?>("HaloAuditDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloAuditTrailStatus")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloAuditTrailTransaction")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloAuditTrailUserId")
                        .HasColumnName("HaloAuditTrailUserID")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloAuditTrailId");

                    b.ToTable("haloaudittrail","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halobatchimported", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Amount")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Date")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Failed")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("halobatchimported","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halobranches", b =>
                {
                    b.Property<long>("HaloBranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloBranchID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloBranchEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloBranchName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloBranchPhoneNumbers")
                        .IsUnicode(false);

                    b.Property<string>("HaloBranchPhysicalAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloBranchPostalAddress")
                        .IsUnicode(false);

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloBranchId");

                    b.HasIndex("HaloClientId")
                        .HasName("fk_HaloBranches_1_idx");

                    b.ToTable("halobranches","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halochatmessages", b =>
                {
                    b.Property<long>("HaloChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloChatMessageID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloChatMessage")
                        .HasColumnType("mediumtext");

                    b.Property<DateTimeOffset?>("HaloChatMessageSentAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("HaloChatMessageSentFrom")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloChatMessageSentTo")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloChatMessageType")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<long?>("HaloChatRequestId")
                        .HasColumnName("HaloChatRequestID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloChatMessageId");

                    b.HasIndex("HaloChatRequestId")
                        .HasName("fk_HaloChatMessages_1_idx");

                    b.ToTable("halochatmessages","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halochatrequests", b =>
                {
                    b.Property<long>("HaloChatRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloChatRequestID")
                        .HasColumnType("bigint(20)");

                    b.Property<byte?>("HaloChatRequestActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloChatRequestHandledAt")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<long?>("HaloChatRequestHandledBy")
                        .HasColumnType("bigint(20)");

                    b.Property<byte?>("HaloChatRequestHasUnread")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("HaloChatRequestLastTransaction")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloChatRequestLatitude")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloChatRequestLongitude")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<long?>("HaloChatRequestMemberId")
                        .HasColumnName("HaloChatRequestMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloChatRequestMemberPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloChatRequestTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("HaloChatRequestId");

                    b.ToTable("halochatrequests","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclaims", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClaimID")
                        .HasColumnType("int(11)");

                    b.Property<long>("ClaimClientId")
                        .HasColumnName("ClaimClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime?>("ClaimCreatedAt");

                    b.Property<string>("ClaimJson")
                        .HasColumnType("mediumtext");

                    b.Property<DateTime?>("ClaimModifiedAt");

                    b.Property<string>("ClaimReference")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ClaimStatus")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("ClaimSubmittedAt");

                    b.Property<int?>("ClaimType")
                        .HasColumnType("int(11)");

                    b.Property<long>("HaloDependantId")
                        .HasColumnName("HaloDependantID")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("ClaimId");

                    b.ToTable("haloclaims","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclaimtypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("CimsType")
                        .HasColumnName("cimsType")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnName("claimType")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("groupName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("haloclaimtypes","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientapiregister", b =>
                {
                    b.Property<int>("Apiclientid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("apiclientid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Clientemail")
                        .IsRequired()
                        .HasColumnName("clientemail")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Clientname")
                        .IsRequired()
                        .HasColumnName("clientname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Createdat")
                        .HasColumnName("createdat");

                    b.Property<string>("Passwordhash")
                        .IsRequired()
                        .HasColumnName("passwordhash")
                        .IsUnicode(false);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .IsUnicode(false);

                    b.HasKey("Apiclientid");

                    b.ToTable("haloclientapiregister","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientbanners", b =>
                {
                    b.Property<long>("HaloClientBannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientBannerID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientBannerPath")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloClientBannerId");

                    b.HasIndex("HaloClientId")
                        .HasName("fk_HaloClientBanners_1_idx");

                    b.ToTable("haloclientbanners","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientmembers", b =>
                {
                    b.Property<long>("HaloClientMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloClientMemberId");

                    b.HasIndex("HaloClientId")
                        .HasName("fk_HaloClientMembers_1_idx");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloClientMembers_2_idx");

                    b.ToTable("haloclientmembers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientpartners", b =>
                {
                    b.Property<long>("HaloClientPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientPartnerID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloPartnerId")
                        .HasColumnName("HaloPartnerID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloClientPartnerId");

                    b.HasIndex("HaloClientId")
                        .HasName("fk_HaloClientPartners_1_idx");

                    b.ToTable("haloclientpartners","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientprogramproducts", b =>
                {
                    b.Property<long>("HaloClientProgramProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientProgramProductID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientProgramId")
                        .HasColumnName("HaloClientProgramID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientProgramProductDescription")
                        .IsUnicode(false);

                    b.Property<string>("HaloClientProgramProductIcon")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<long?>("HaloClientProgramProductIndex")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientProgramProductName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<int?>("HaloClientProgramProductOrder")
                        .HasColumnType("int(11)");

                    b.Property<string>("HaloClientProgramProductPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("HaloClientProgramProductPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("HaloClientProgramProductTerms")
                        .IsUnicode(false);

                    b.HasKey("HaloClientProgramProductId");

                    b.HasIndex("HaloClientProgramId")
                        .HasName("fk_HaloClientProgramProducts_1_idx");

                    b.ToTable("haloclientprogramproducts","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientprograms", b =>
                {
                    b.Property<long>("HaloClientProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientProgramID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientProgramClientId")
                        .HasColumnName("HaloClientProgramClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientProgramCode")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloClientProgramId");

                    b.HasIndex("HaloClientProgramClientId")
                        .HasName("fk_HaloClientPrograms_1_idx");

                    b.ToTable("haloclientprograms","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclients", b =>
                {
                    b.Property<long>("HaloClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientAbout")
                        .HasColumnType("mediumtext");

                    b.Property<string>("HaloClientClaimEmailAddress")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientContactDetailsInfo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("This innovative app service is provided by Global Choices as a result of your insurance policy with ?CLIENTNAME?.")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientEmailAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientEmergencyPhoneNumber")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientFspnumber")
                        .HasColumnName("HaloClientFSPNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientLogoPath")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("/images/clients/default/logo.png")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientPdflogoPath")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientPDFLogoPath")
                        .HasDefaultValueSql("/images/clients/default/logo.png")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientPhoneNumbers")
                        .IsUnicode(false);

                    b.Property<string>("HaloClientPhysicalAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloClientPostalAddress")
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloClientRegistrationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloClientResetMessage")
                        .IsUnicode(false);

                    b.Property<string>("HaloClientServices")
                        .HasColumnType("mediumtext");

                    b.Property<long?>("HaloClientSmscredits")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientSMSCredits")
                        .HasColumnType("bigint(20)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("HaloClientWebsite")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientWelcomeMessage")
                        .IsUnicode(false);

                    b.HasKey("HaloClientId");

                    b.ToTable("haloclients","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientslogin", b =>
                {
                    b.Property<long>("HaloClientLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloClientLoginID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloClientPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<short?>("HaloClientStatus")
                        .HasColumnType("smallint(1)");

                    b.Property<string>("HaloClientUserName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloClientUserSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("HaloClientLoginId");

                    b.ToTable("haloclientslogin","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.HalodictionaryEnZa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnName("key")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("mediumtext");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasName("key_UNIQUE");

                    b.ToTable("halodictionary_en_za","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halodriverslicences", b =>
                {
                    b.Property<long>("HaloDriversLicenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloDriversLicenceID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("CertificateNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Class1FirstIssueDate")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Class1VehicleCode")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Class1VehicleRestrictions")
                        .IsUnicode(false);

                    b.Property<string>("Class2FirstIssueDate")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Class2VehicleCode")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Class2VehicleRestrictions")
                        .IsUnicode(false);

                    b.Property<string>("Class3FirstIssueDate")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Class3VehicleCode")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Class3VehicleRestrictions")
                        .IsUnicode(false);

                    b.Property<string>("CountryOfIssue")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("DriverRestrictions1")
                        .IsUnicode(false);

                    b.Property<string>("DriverRestrictions2")
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<long?>("HaloDependantId")
                        .HasColumnName("HaloDependantID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Idnumber")
                        .HasColumnName("IDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Initials")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("IssueNumber")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("LicencePhoto")
                        .HasColumnType("mediumtext");

                    b.Property<string>("Pdpcategory")
                        .HasColumnName("PDPCategory")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("PdpvalidTo")
                        .HasColumnName("PDPValidTo")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ValidFrom")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("ValidTo")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.HasKey("HaloDriversLicenceId");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloDriversLicences_1_idx");

                    b.ToTable("halodriverslicences","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloftpaudittrail", b =>
                {
                    b.Property<long>("HaloFtpauditTrailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloFTPAuditTrailID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloFtpauditTrailClientId")
                        .HasColumnName("HaloFTPAuditTrailClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloFtpauditTrailFileDateTime")
                        .HasColumnName("HaloFTPAuditTrailFileDateTime")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloFtpauditTrailFileFrom")
                        .HasColumnName("HaloFTPAuditTrailFileFrom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloFtpauditTrailFileName")
                        .HasColumnName("HaloFTPAuditTrailFileName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloFtpauditTrailProcDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloFTPAuditTrailProcDateTime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloFtpauditTrailStatus")
                        .HasColumnName("HaloFTPAuditTrailStatus")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloFtpauditTrailId");

                    b.ToTable("haloftpaudittrail","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloinappapplications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<long?>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ProjectId")
                        .HasColumnName("ProjectID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RestApiKey")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("haloinappapplications","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloinappmessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("MemberId")
                        .HasColumnName("MemberID")
                        .HasColumnType("int(11)");

                    b.Property<string>("Message")
                        .IsUnicode(false);

                    b.Property<string>("MessageType")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Read")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("ReadAt")
                        .HasColumnName("Read_At");

                    b.Property<int?>("Sent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("SentAt")
                        .HasColumnName("Sent_At");

                    b.Property<string>("Subject")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("haloinappmessages","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloinappregistration", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnName("MemberID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PlayerId")
                        .HasColumnName("PlayerID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("MemberId");

                    b.ToTable("haloinappregistration","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.HalomemberAdditionalClientData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClientIdentifier")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("MemberId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Programme")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("PropCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("UpdatedOn");

                    b.Property<int>("VehicleCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.ToTable("halomember_additional_client_data","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaims", b =>
                {
                    b.Property<long>("HaloMemberClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberClaimID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloDependantId")
                        .HasColumnName("HaloDependantID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberClaimIncidentAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentContactNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentDate")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentDescription")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentIdnumber")
                        .HasColumnName("HaloMemberClaimIncidentIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimIncidentTime")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicBack")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicFront")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicLabel")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicLeft")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicLicence")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicOdo")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicRight")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimPicWindscreen")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloMemberClaimSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloMemberClaimTowingCompanyContact")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimTowingCompanyDriver")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimTowingCompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleColour")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleControlNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleEngineNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleExpiryDate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleLicenceNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleMake")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleRegisterNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleSeriesName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimVehicleVinNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloMemberClaimId");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloMemberClaims_1_idx");

                    b.ToTable("halomemberclaims","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaimseyewitness", b =>
                {
                    b.Property<long>("HaloMemberClaimsEyewitnessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberClaimsEyewitnessID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberClaimsEyewitnessAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsEyewitnessContact")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsEyewitnessName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<long?>("HaloMemberClaimsId")
                        .HasColumnName("HaloMemberClaimsID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloMemberClaimsEyewitnessId");

                    b.HasIndex("HaloMemberClaimsId")
                        .HasName("fk_HaloMemberClaimsEyewitness_1_idx");

                    b.ToTable("halomemberclaimseyewitness","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaimsthirdparty", b =>
                {
                    b.Property<long>("HaloMemberClaimsThirdPartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberClaimsThirdPartyID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberClaimId")
                        .HasColumnName("HaloMemberClaimID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberClaimsThirdPartyAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyColour")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyContact")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyControlNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyEngineNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyExpiryDate")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyLicenceNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyMake")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicBack")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicFront")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicLabel")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicLeft")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicLicence")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicOdo")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicRight")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyPicWindscreen")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyRegisterNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartySeriesName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberClaimsThirdPartyVinNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberClaimsThirdPartyId");

                    b.HasIndex("HaloMemberClaimId")
                        .HasName("fk_HaloMemberClaimsThirdParty_1_idx");

                    b.ToTable("halomemberclaimsthirdparty","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberdependants", b =>
                {
                    b.Property<long>("HaloDependantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloDependantID")
                        .HasColumnType("bigint(20)");

                    b.Property<short?>("HaloDependantActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloDependantAllergies")
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantBloodDonorNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantBloodType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantBusinessName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantCellPhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloDependantDateAdded")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloDependantDateOfBirth")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantEmergencyContactName1")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantEmergencyContactName2")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantEmergencyContactNumber1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantEmergencyContactNumber2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantFullName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantGender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantHash")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantHomeAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantHomeLatitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantHomeLongitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantHomePhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantIdnumber")
                        .HasColumnName("HaloDependantIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantIdtype")
                        .HasColumnName("HaloDependantIDType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantImage")
                        .HasColumnType("mediumtext");

                    b.Property<short?>("HaloDependantIsHashed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloDependantLanguage")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantMedicalAidName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantMedicalAidNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantMedicalAidScheme")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantOccupation")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantRelationship")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantTmpIndex")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantWorkAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloDependantWorkPhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDependantOtp")
                        .HasColumnName("HaloMemberDependantOTP")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDependantPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDependantToken")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloDependantId");

                    b.HasIndex("HaloDependantCellPhoneNumber")
                        .IsUnique()
                        .HasName("HaloDependantCellPhoneNumber_UNIQUE");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloMemberDependants_1_idx");

                    b.ToTable("halomemberdependants","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberftpfiles", b =>
                {
                    b.Property<long>("HaloMemberFtpFilesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberFtpFilesID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberFtpFileProcessed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("\"No\"")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberFtpFilesEmailSent")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberFtpFilesFileName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberFtpFilesTimeStamp")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberFtpFolderName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberFtpFilesId");

                    b.HasIndex("HaloMemberFtpFilesId")
                        .IsUnique()
                        .HasName("HaloMemberFtpFilesID_UNIQUE");

                    b.ToTable("halomemberftpfiles","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberloaderror", b =>
                {
                    b.Property<int>("HaloMemberLoadErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberLoadErrorID")
                        .HasColumnType("int(11)");

                    b.Property<string>("HaloMemberLoadErrorDateSent")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorEmailSent")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorFtpFileName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorIdNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorIdType")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorMobileNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorPolicyNumber")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorSurname")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberLoadErrorTimeStamp")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberLoadErrorId");

                    b.ToTable("halomemberloaderror","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomembermessages", b =>
                {
                    b.Property<long>("HaloMemberMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberMessageID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberMessage")
                        .HasColumnType("mediumtext");

                    b.Property<byte?>("HaloMemberMessageDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("0");

                    b.Property<byte?>("HaloMemberMessageRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("HaloMemberMessageSentAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("HaloMemberMessageSentFromId")
                        .HasColumnName("HaloMemberMessageSentFromID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberMessageSentFromName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<long?>("HaloMemberMessageSentTo")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloMemberMessageId");

                    b.ToTable("halomembermessages","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberphonenumbers", b =>
                {
                    b.Property<long>("HaloMemberPhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberPhoneNumberID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberPhoneNumberId");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloMemberPhoneNumbers_1_idx");

                    b.ToTable("halomemberphonenumbers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberprograms", b =>
                {
                    b.Property<long>("HaloMemberProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberProgramID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloClientId")
                        .HasColumnName("HaloClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloProgramId")
                        .HasColumnName("HaloProgramID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloMemberProgramId");

                    b.HasIndex("HaloClientId")
                        .HasName("fk_HaloMemberPrograms_1_idx");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloMemberPrograms_2_idx");

                    b.HasIndex("HaloProgramId")
                        .HasName("fk_HaloMemberPrograms_3_idx");

                    b.ToTable("halomemberprograms","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomembers", b =>
                {
                    b.Property<long>("HaloMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTimeOffset?>("HaloMemberActivateDate");

                    b.Property<short?>("HaloMemberActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloMemberAllergies")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBloodDonorNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBloodType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBusinessName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDataKey")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDateOfBirth")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmailAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactName1")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactName2")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactNumber1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactNumber2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberFullName")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberGender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHash")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeLatitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeLongitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomePhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberIdnumber")
                        .HasColumnName("HaloMemberIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberIdtype")
                        .HasColumnName("HaloMemberIDType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberImage")
                        .HasColumnType("mediumtext");

                    b.Property<short?>("HaloMemberIsHashed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloMemberLanguage")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloMemberLoadDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloMemberMedicalAidName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberMedicalAidNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberMedicalAidScheme")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloMemberModifiedDate");

                    b.Property<string>("HaloMemberName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberOccupation")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberOtp")
                        .HasColumnName("HaloMemberOTP")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberSurname")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberToken")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberVat")
                        .HasMaxLength(31)
                        .IsUnicode(false);

                    b.Property<int?>("HaloMemberWelcomeEmailSent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("HaloMemberWorkAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberWorkPhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberId");

                    b.ToTable("halomembers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomembersstage", b =>
                {
                    b.Property<long>("HaloMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<short?>("HaloMemberActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("HaloMemberAllergies")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBloodDonorNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBloodType")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberBusinessName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberDateOfBirth")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactName1")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactName2")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactNumber1")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberEmergencyContactNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberGender")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeLatitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomeLongitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberHomePhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberIdnumber")
                        .HasColumnName("HaloMemberIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberIdtype")
                        .HasColumnName("HaloMemberIDType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberImage")
                        .HasColumnType("mediumtext");

                    b.Property<string>("HaloMemberLanguage")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberMedicalAidName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberMedicalAidNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberMedicalAidScheme")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberOccupation")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberOtp")
                        .HasColumnName("HaloMemberOTP")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberPassword")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberSurname")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberToken")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberWorkAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloMemberWorkPhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("HaloMemberId");

                    b.ToTable("halomembersstage","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomobileclientcontent", b =>
                {
                    b.Property<long>("HaloMobileClientContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMobileClientContentID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMobileClientContentClientId")
                        .HasColumnName("HaloMobileClientContentClientID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMobileClientContentPageContent")
                        .HasColumnType("mediumtext");

                    b.Property<string>("HaloMobileClientContentPageName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloMobileClientContentId");

                    b.ToTable("halomobileclientcontent","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomobilecontent", b =>
                {
                    b.Property<int>("HaloMobileContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloMobileContentID")
                        .HasColumnType("int(11)");

                    b.Property<string>("HaloMobileContentPageContent")
                        .HasColumnType("mediumtext");

                    b.Property<string>("HaloMobileContentPageName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloMobileContentType")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.HasKey("HaloMobileContentId");

                    b.ToTable("halomobilecontent","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halonetstar", b =>
                {
                    b.Property<long>("HaloNetStarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloNetStarID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloNetStarCellNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarIdnumber")
                        .HasColumnName("HaloNetStarIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarIncidentDateTimeUtc")
                        .HasColumnName("HaloNetStarIncidentDateTimeUTC")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarIncidentLatitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarIncidentLongitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarIncidentSpeed")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarPolicyNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("HaloNetStarSurname")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloNetStarTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HaloNetStarVehichleRegistration")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("HaloNetStarId");

                    b.ToTable("halonetstar","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halopanics", b =>
                {
                    b.Property<long>("HaloPanicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloPanicID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloCaseId")
                        .HasColumnName("HaloCaseID")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloMemberPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte?>("HaloPanicActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("1");

                    b.Property<DateTimeOffset?>("HaloPanicHandledAt");

                    b.Property<long?>("HaloPanicHandledBy")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloPanicLatitude")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("HaloPanicLongitude")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<long?>("HaloPanicProductId")
                        .HasColumnName("HaloPanicProductID")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTimeOffset?>("HaloPanicTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("HaloPanicVmiId")
                        .HasColumnName("HaloPanicVmiID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloPanicId");

                    b.ToTable("halopanics","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halopartners", b =>
                {
                    b.Property<long>("HaloPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloPartnerID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloPartnerAbout")
                        .HasColumnType("mediumtext");

                    b.Property<string>("HaloPartnerEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerLogoPath")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("/images/partners/default/logo.png")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerName")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerPhoneNumbers")
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerPhysicalAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerPostalAddress")
                        .IsUnicode(false);

                    b.Property<string>("HaloPartnerWebsite")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("HaloPartnerId");

                    b.ToTable("halopartners","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloproducts", b =>
                {
                    b.Property<long>("HaloProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloProductID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloProductDescription")
                        .IsUnicode(false);

                    b.Property<string>("HaloProductIcon")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloProductName")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloProductPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("HaloProductPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("HaloProductTerms")
                        .IsUnicode(false);

                    b.HasKey("HaloProductId");

                    b.ToTable("haloproducts","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloreminders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("InAppMessageId")
                        .HasColumnName("in_app_message_id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnName("reference_number")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("ReminderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reminder_type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.ToTable("haloreminders","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halosentsmss", b =>
                {
                    b.Property<long>("HaloSentSmsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloSentSMSID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloSentSmsfromId")
                        .HasColumnName("HaloSentSMSFromID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("HaloSentSmsgatewayResponse")
                        .HasColumnName("HaloSentSMSGatewayResponse")
                        .IsUnicode(false);

                    b.Property<string>("HaloSentSmsmessage")
                        .HasColumnName("HaloSentSMSMessage")
                        .IsUnicode(false);

                    b.Property<DateTimeOffset?>("HaloSentSmstimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloSentSMSTimeStamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<long?>("HaloSentSmstoId")
                        .HasColumnName("HaloSentSMSToID")
                        .HasColumnType("bigint(20)");

                    b.HasKey("HaloSentSmsid");

                    b.ToTable("halosentsmss","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halositeconfig", b =>
                {
                    b.Property<int>("HaloSiteConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloSiteConfigID")
                        .HasColumnType("int(11)");

                    b.Property<string>("HaloSiteConfigKey")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("HaloSiteConfigValue")
                        .HasColumnType("mediumtext");

                    b.HasKey("HaloSiteConfigId");

                    b.ToTable("halositeconfig","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halovehiclelicences", b =>
                {
                    b.Property<long>("HaloVehicleLicenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HaloVehicleLicenceID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("ControlNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("EngineNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ExpiryDate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<long?>("HaloDependantId")
                        .HasColumnName("HaloDependantID")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("HaloMemberId")
                        .HasColumnName("HaloMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("LicenceNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RegisterNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SeriesName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VehicleColour")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VehicleDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VehicleMake")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("VehicleYear")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("VinNumber")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("HaloVehicleLicenceId");

                    b.HasIndex("HaloMemberId")
                        .HasName("fk_HaloVehicleLicences_1_idx");

                    b.ToTable("halovehiclelicences","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halovehiclemonitorintegration", b =>
                {
                    b.Property<long>("Vmiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VMIID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("UnidentifiedContent")
                        .HasColumnType("json");

                    b.Property<string>("VmicellNumber")
                        .HasColumnName("VMICellNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Vmiidnumber")
                        .HasColumnName("VMIIDNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("VmiincidentDateTimeUtc")
                        .HasColumnName("VMIIncidentDateTimeUTC");

                    b.Property<string>("VmiincidentLatitude")
                        .HasColumnName("VMIIncidentLatitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("VmiincidentLongitude")
                        .HasColumnName("VMIIncidentLongitude")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("VmiincidentSpeed")
                        .HasColumnName("VMIIncidentSpeed")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<long?>("VmimemberId")
                        .HasColumnName("VMIMemberID")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Vminame")
                        .HasColumnName("VMIName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("VmipolicyNumber")
                        .HasColumnName("VMIPolicyNumber")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Vmiradius")
                        .HasColumnName("VMIRadius")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Vmisource")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VMISource")
                        .HasDefaultValueSql("cartrack")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int?>("Vmistatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VMIStatus")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Vmisurname")
                        .HasColumnName("VMISurname")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset>("VmitimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VMITimeStamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("VmivehichleRegistration")
                        .HasColumnName("VMIVehichleRegistration")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("Vmiid");

                    b.ToTable("halovehiclemonitorintegration","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .HasColumnType("longtext");

                    b.Property<string>("Players")
                        .IsRequired()
                        .HasColumnName("players")
                        .HasColumnType("json");

                    b.Property<string>("Program")
                        .HasColumnName("program")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Sent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sent")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnName("subject")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("Time")
                        .HasColumnName("time");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("notifications_id_uindex");

                    b.ToTable("notifications","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Policychangerequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ChangeDetails")
                        .HasColumnName("change_details")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("PolicyId")
                        .HasColumnName("policy_id")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset>("RequestTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("request_timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("RiskItemId")
                        .HasColumnName("risk_item_id")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PolicyChangeRequests_id_uindex");

                    b.ToTable("policychangerequests","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Providers", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provider_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Area")
                        .HasColumnName("area")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("BankAccNumber")
                        .HasColumnName("bank_acc_number")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("BankBranchCode")
                        .HasColumnName("bank_branch_code")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("BankName")
                        .HasColumnName("bank_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchPhysicalAddress")
                        .HasColumnName("branch_physical_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BusinessRegistrationNumber")
                        .HasColumnName("business_registration_number")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("EmailAddress")
                        .HasColumnName("email_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("IncomTaxNumber")
                        .HasColumnName("incom_tax_number")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("OwnerContactNumber")
                        .HasColumnName("owner_contact_number")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("OwnerName")
                        .HasColumnName("owner_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PostalAddress")
                        .HasColumnName("postal_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasMaxLength(8)
                        .IsUnicode(false);

                    b.Property<string>("PrimaryContactNumber")
                        .HasColumnName("primary_contact_number")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Region")
                        .HasColumnName("region")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("RegisteredBusinessName")
                        .HasColumnName("registered_business_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RegisteredPhysicalAddress")
                        .HasColumnName("registered_physical_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SecondaryContactNumber")
                        .HasColumnName("secondary_contact_number")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("Suburb")
                        .HasColumnName("suburb")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("TradingBusinessName")
                        .HasColumnName("trading_business_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("VatNumber")
                        .HasColumnName("vat_number")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ProviderId");

                    b.HasIndex("ProviderId")
                        .IsUnique()
                        .HasName("providers_provider_id_uindex");

                    b.ToTable("providers","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Provinces", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("province_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CountryId")
                        .HasColumnName("country_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ProvinceDescription")
                        .HasColumnName("province_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ProvinceName")
                        .HasColumnName("province_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Provincescol")
                        .HasColumnName("provincescol")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("ProvinceId");

                    b.HasIndex("ProvinceId")
                        .IsUnique()
                        .HasName("province_id_UNIQUE");

                    b.ToTable("provinces","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ProvincesList", b =>
                {
                    b.Property<int>("ProvincesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("provinces_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ProvincesListDescription")
                        .HasColumnName("provinces_list_description")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("ProvincesListName")
                        .HasColumnName("provinces_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ProvincesListId");

                    b.HasIndex("ProvincesListId")
                        .IsUnique()
                        .HasName("provinces_list_id_UNIQUE");

                    b.ToTable("provinces_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ReferenceSubset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("SubsetLast")
                        .HasColumnName("subset_last")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("SubsetName")
                        .HasColumnName("subset_name")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("SubsetPrefix")
                        .HasColumnName("subset_prefix")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("reference_subset","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ReferralResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HttpResponse")
                        .HasColumnName("http_response")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("referral_response","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Referrals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ClientId")
                        .HasColumnName("client_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<long?>("MemberId")
                        .HasColumnName("member_id")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<string>("Relationship")
                        .HasColumnName("relationship")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<DateTimeOffset>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("referrals","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("region_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnName("province_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("RegionDescription")
                        .HasColumnName("region_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RegionName")
                        .HasColumnName("region_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("RegionId");

                    b.HasIndex("RegionId")
                        .IsUnique()
                        .HasName("region_id_UNIQUE");

                    b.ToTable("region","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.RegionList", b =>
                {
                    b.Property<int>("RegionListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("region_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("RegionListDescription")
                        .HasColumnName("region_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RegionListName")
                        .HasColumnName("region_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("RegionListId");

                    b.HasIndex("RegionListId")
                        .IsUnique()
                        .HasName("region_list_id_UNIQUE");

                    b.ToTable("region_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceCatagoriesList", b =>
                {
                    b.Property<int>("ServiceCatagoriesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_catagories_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceCatagoriesListDescription")
                        .HasColumnName("service_catagories_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceCatagoriesListName")
                        .HasColumnName("service_catagories_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceCatagoriesListId");

                    b.HasIndex("ServiceCatagoriesListId")
                        .IsUnique()
                        .HasName("service_catagories_list_id_UNIQUE");

                    b.ToTable("service_catagories_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceCategories", b =>
                {
                    b.Property<int>("ServiceCatagorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_catagorie_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceCategorieDescription")
                        .HasColumnName("service_categorie_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceCategorieName")
                        .HasColumnName("service_categorie_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("ServiceId")
                        .HasColumnName("service_id")
                        .HasColumnType("int(11)");

                    b.HasKey("ServiceCatagorieId");

                    b.HasIndex("ServiceCatagorieId")
                        .IsUnique()
                        .HasName("service_catagorie_id_UNIQUE");

                    b.ToTable("service_categories","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceList", b =>
                {
                    b.Property<int>("ServiceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceListDescription")
                        .HasColumnName("service_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceListName")
                        .HasColumnName("service_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceListId");

                    b.HasIndex("ServiceListId")
                        .IsUnique()
                        .HasName("service_list_id_UNIQUE");

                    b.ToTable("service_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceProvidersAudit", b =>
                {
                    b.Property<int>("ServiceProvidersAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_providers_audit_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceProvidersAuditChangeDate")
                        .HasColumnName("service_providers_audit_change_date")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceProvidersAuditChangedTableName")
                        .HasColumnName("service_providers_audit_changed_table_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceProvidersAuditData")
                        .HasColumnName("service_providers_audit_data")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceProvidersAuditType")
                        .HasColumnName("service_providers_audit_type")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceProvidersAuditUserName")
                        .HasColumnName("service_providers_audit_user_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceProvidersAuditId");

                    b.HasIndex("ServiceProvidersAuditId")
                        .IsUnique()
                        .HasName("service_providers_audit_id_UNIQUE");

                    b.ToTable("service_providers_audit","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceSubCatagories", b =>
                {
                    b.Property<int>("ServiceSubCatagorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_sub_catagorie_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ServiceCatagorieId")
                        .HasColumnName("service_catagorie_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceSubCatagorieDescription")
                        .HasColumnName("service_sub_catagorie_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceSubCatagorieName")
                        .HasColumnName("service_sub_catagorie_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceSubCatagorieId");

                    b.HasIndex("ServiceSubCatagorieId")
                        .IsUnique()
                        .HasName("service_sub_catagorie_id_UNIQUE");

                    b.ToTable("service_sub_catagories","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.ServiceSubCategoriesList", b =>
                {
                    b.Property<int>("ServiceSubCategoriesListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_sub_categories_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceSubCategoriesListDescription")
                        .HasColumnName("service_sub_categories_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceSubCategoriesListName")
                        .HasColumnName("service_sub_categories_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceSubCategoriesListId");

                    b.HasIndex("ServiceSubCategoriesListId")
                        .IsUnique()
                        .HasName("service_sub_categories_list_id_UNIQUE");

                    b.ToTable("service_sub_categories_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Services", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("service_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ProviderId")
                        .HasColumnName("provider_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ServiceDescription")
                        .HasColumnName("service_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ServiceName")
                        .HasColumnName("service_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ServiceId");

                    b.HasIndex("ServiceId")
                        .IsUnique()
                        .HasName("service_id_UNIQUE");

                    b.ToTable("services","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Suburbs", b =>
                {
                    b.Property<int>("SuburbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("suburb_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Address1")
                        .HasColumnName("address_1")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasColumnName("address_2")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BeeLevel")
                        .HasColumnName("bee_level")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchEmailAddress")
                        .HasColumnName("branch_email_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchLatitude")
                        .HasColumnName("branch_latitude")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchLongitude")
                        .HasColumnName("branch_longitude")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .HasColumnName("branch_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("BranchTelephoneNumber")
                        .HasColumnName("branch_telephone_number")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("CityId")
                        .HasColumnName("city_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("ContactCellNo")
                        .HasColumnName("contact_cell_no")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ContactEmailAddress")
                        .HasColumnName("contact_email_address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ContactName")
                        .HasColumnName("contact_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CreditCheck")
                        .HasColumnName("credit_check")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("DateBeeLevel")
                        .HasColumnName("date_bee_level")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("DateCreditCheck")
                        .HasColumnName("date_credit_check")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SuburbName")
                        .HasColumnName("suburb_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("SuburbId");

                    b.HasIndex("SuburbId")
                        .IsUnique()
                        .HasName("suburb_id_UNIQUE");

                    b.ToTable("suburbs","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.SuburbsList", b =>
                {
                    b.Property<int>("SuburbsListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("suburbs_list_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("SuburbsListDescription")
                        .HasColumnName("suburbs_list_description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SuburbsListName")
                        .HasColumnName("suburbs_list_name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("SuburbsListId");

                    b.HasIndex("SuburbsListId")
                        .IsUnique()
                        .HasName("suburbs_list_id_UNIQUE");

                    b.ToTable("suburbs_list","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Token", b =>
                {
                    b.Property<int>("AutoInc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("auto_inc")
                        .HasColumnType("int(11)");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Issuer")
                        .HasColumnName("issuer")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.HasKey("AutoInc");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("token_id_uindex");

                    b.ToTable("token","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Users", b =>
                {
                    b.Property<int>("AutoInc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("auto_inc")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnName("id")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnName("last_modified");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .IsUnicode(false);

                    b.Property<string>("Secret")
                        .HasColumnName("secret")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("AutoInc");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("users_email_uindex");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("users_id_uindex");

                    b.ToTable("users","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Ussdtest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Contents")
                        .HasColumnName("contents")
                        .HasMaxLength(1023)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ussdtest","halo");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halobranches", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Haloclients", "HaloClient")
                        .WithMany("Halobranches")
                        .HasForeignKey("HaloClientId")
                        .HasConstraintName("fk_HaloBranches_1");
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientbanners", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Haloclients", "HaloClient")
                        .WithMany("Haloclientbanners")
                        .HasForeignKey("HaloClientId")
                        .HasConstraintName("fk_HaloClientBanners_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientpartners", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Haloclients", "HaloClient")
                        .WithMany("Haloclientpartners")
                        .HasForeignKey("HaloClientId")
                        .HasConstraintName("fk_HaloClientPartners_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Haloclientprograms", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Haloclients", "HaloClientProgramClient")
                        .WithMany("Haloclientprograms")
                        .HasForeignKey("HaloClientProgramClientId")
                        .HasConstraintName("fk_HaloClientPrograms_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaims", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Halomembers", "HaloMember")
                        .WithMany("Halomemberclaims")
                        .HasForeignKey("HaloMemberId")
                        .HasConstraintName("fk_HaloMemberClaims_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaimseyewitness", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Halomemberclaims", "HaloMemberClaims")
                        .WithMany("Halomemberclaimseyewitness")
                        .HasForeignKey("HaloMemberClaimsId")
                        .HasConstraintName("fk_HaloMemberClaimsEyewitness_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPortal.HaloMysql.Halomemberclaimsthirdparty", b =>
                {
                    b.HasOne("AdminPortal.HaloMysql.Halomemberclaims", "HaloMemberClaim")
                        .WithMany("Halomemberclaimsthirdparty")
                        .HasForeignKey("HaloMemberClaimId")
                        .HasConstraintName("fk_HaloMemberClaimsThirdParty_1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
